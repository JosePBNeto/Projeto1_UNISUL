/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.Emprestimo;
import Model.Ferramenta;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class EmprestimosAtivos extends javax.swing.JFrame {

    /**
     * Creates new form EmprestimosAtivos
     */
    
    Emprestimo objetoEmprestimo;
    
    public EmprestimosAtivos() {
        initComponents();
        TelaPrincipal.CarregarIcone(this);
        objetoEmprestimo = new Emprestimo();
        this.carregarTabelaEmprestimosAtrasados();
        this.carregarTabelaEmprestimosAtivos();
        this.jTableEmprestimosAtivos.setAutoCreateRowSorter(true);
        this.jTableEmprestimosAtrasados.setAutoCreateRowSorter(true);
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEmprestimosAtrasados = new javax.swing.JTable();
        jButtonDevolverFerramenta = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButtonVoltar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableEmprestimosAtivos = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ToolShare");

        jTableEmprestimosAtrasados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Ferramenta", "Marca", "Previsão de Devolução"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableEmprestimosAtrasados);
        if (jTableEmprestimosAtrasados.getColumnModel().getColumnCount() > 0) {
            jTableEmprestimosAtrasados.getColumnModel().getColumn(0).setPreferredWidth(1);
        }

        jButtonDevolverFerramenta.setText("Devolver Ferramenta");
        jButtonDevolverFerramenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDevolverFerramentaActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(0, 204, 102));
        jLabel2.setText("Empréstimos Dentro do Prazo de Entrega");

        jLabel3.setForeground(new java.awt.Color(255, 51, 51));
        jLabel3.setText("Empréstimos Fora do Prazo de Entrega");

        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        jTableEmprestimosAtivos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Ferramenta", "Marca", "Previsão de Devolução"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableEmprestimosAtivos);
        if (jTableEmprestimosAtivos.getColumnModel().getColumnCount() > 0) {
            jTableEmprestimosAtivos.getColumnModel().getColumn(0).setPreferredWidth(1);
        }

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Relatório de Empréstimos Ativos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 774, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(jButtonVoltar)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonDevolverFerramenta))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonDevolverFerramenta)
                    .addComponent(jButtonVoltar))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(838, 624));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDevolverFerramentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDevolverFerramentaActionPerformed
        // TODO add your handling code here:
        
        try {
            if (this.jTableEmprestimosAtrasados.getSelectedRow() == -1 && this.jTableEmprestimosAtivos.getSelectedRow() == -1) {
                throw new Mensagens("Selecione um emprestimo para devolver");                
            }            
            if (this.jTableEmprestimosAtivos.getSelectedRow() != -1) {
                this.DevolverFerramenta();
            }
            if (this.jTableEmprestimosAtrasados.getSelectedRow() != -1) {
                this.DevolverFerramentaAtrasada();
            }
        } catch (Mensagens m) {
            JOptionPane.showMessageDialog(rootPane, m.getMessage());
        }
    }//GEN-LAST:event_jButtonDevolverFerramentaActionPerformed

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private Date dataDeHoje() {
        LocalDate localDatehoje = LocalDate.now();
        String stringHoje = localDatehoje.toString();
        Date dataHoje = null;
        try {
            SimpleDateFormat desiredFormat = new SimpleDateFormat("yyyy-MM-dd");
            dataHoje = desiredFormat.parse(stringHoje);
            return dataHoje;
            
        } catch (ParseException ex) {
            Logger.getLogger(EmprestimosAtivos.class.getName()).log(Level.SEVERE, null, ex); 
        }
        return dataHoje;
    }

    private void carregarTabelaEmprestimosAtrasados() {
          
        DefaultTableModel model = (DefaultTableModel) this.jTableEmprestimosAtrasados.getModel();
        model.setNumRows(0);
            
            
        ArrayList<Emprestimo> listaEmprestimos = new ArrayList<>();
            
        listaEmprestimos = objetoEmprestimo.getMinhaLista();            
       
        for (Emprestimo e : listaEmprestimos) {
            if (e.getDataDevolucao().compareTo(this.dataDeHoje()) < 0 && e.getStatus() == true) {
                    model.addRow(new Object[] {
                    e.getId(),
                    e.getAmigo().getNome(),
                    e.getFerramenta().getNome(),
                    e.getFerramenta().getMarca(),
                    e.getDataDevolucao()
                    });
            }
        }
    }
    
    private void carregarTabelaEmprestimosAtivos() {
        
        DefaultTableModel model = (DefaultTableModel) this.jTableEmprestimosAtivos.getModel();
        model.setNumRows(0);
        
        ArrayList<Emprestimo> listaEmprestimos = new ArrayList<>();
        
        listaEmprestimos = objetoEmprestimo.getMinhaLista();  
  
        for (Emprestimo e : listaEmprestimos) {
            if (e.getDataDevolucao().compareTo(this.dataDeHoje()) > 0 && e.getStatus() == true) {
                
                model.addRow(new Object[] {
                    e.getId(),
                    e.getAmigo().getNome(),
                    e.getFerramenta().getNome(),
                    e.getFerramenta().getMarca(),
                    e.getDataDevolucao()                   
                    });    
            }
        }    
    }
    
    private void DevolverFerramenta() {
            
            // fazer atributo da classe
            Emprestimo emprestimo = new Emprestimo();
            Ferramenta ferramenta = new Ferramenta();
            
            int id_emprestimo = Integer.parseInt(this.jTableEmprestimosAtivos.getValueAt(this.jTableEmprestimosAtivos.getSelectedRow(), 0).toString());
            
            emprestimo = objetoEmprestimo.CarregaEmprestimo(id_emprestimo);
            
            int id_ferramenta = emprestimo.getFerramenta().getId();
            
            if (ferramenta.setDisponivel(id_ferramenta) && emprestimo.SetStatusBD(id_emprestimo, false)) {
                JOptionPane.showMessageDialog(rootPane, "Ferramenta devolvida com sucesso!");
                this.carregarTabelaEmprestimosAtivos();
            }
                
    }
    private void DevolverFerramentaAtrasada() {
            
            Emprestimo emprestimo = new Emprestimo();
            Ferramenta ferramenta = new Ferramenta();
            
            int id_emprestimo = Integer.parseInt(this.jTableEmprestimosAtrasados.getValueAt(this.jTableEmprestimosAtrasados.getSelectedRow(), 0).toString());
            
            emprestimo = objetoEmprestimo.CarregaEmprestimo(id_emprestimo);
            
            int id_ferramenta = emprestimo.getFerramenta().getId();
            
            if (ferramenta.setDisponivel(id_ferramenta) && emprestimo.SetStatusBD(id_emprestimo, false)) {
                JOptionPane.showMessageDialog(rootPane, "Ferramenta ATRASADA devolvida com sucesso!");
                this.carregarTabelaEmprestimosAtrasados();
            }
                
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmprestimosAtivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmprestimosAtivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmprestimosAtivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmprestimosAtivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmprestimosAtivos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDevolverFerramenta;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableEmprestimosAtivos;
    private javax.swing.JTable jTableEmprestimosAtrasados;
    // End of variables declaration//GEN-END:variables
}
