/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import Model.Amigo;
import Model.Emprestimo;
import Model.Ferramenta;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;


public class EmprestimoFerramenta extends javax.swing.JFrame {

    /**
     * Creates new form EmprestimoFerramenta
     */
    private Amigo objetoamigo;
    private Ferramenta objetoferramenta;
    private Emprestimo objetoemprestimo; 
    LocalDate localDatehoje = LocalDate.now();
    Date hoje;
    public EmprestimoFerramenta() {
        
        initComponents();
        
        TelaPrincipal.CarregarIcone(this);
        
        this.CarregarBoxAmigos();
        this.CarregarBoxFerramentas();
        this.CarregarDataEmprestimo();
        
        this.objetoemprestimo = new Emprestimo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        panel1 = new java.awt.Panel();
        jFormattedTextField2 = new javax.swing.JFormattedTextField();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cb1 = new javax.swing.JComboBox<>();
        cb2 = new javax.swing.JComboBox<>();
        btnCancelar = new javax.swing.JButton();
        btnConfirmar = new javax.swing.JButton();
        jCalendarioDataEmprestimo = new com.toedter.calendar.JDateChooser();
        jLabel1 = new javax.swing.JLabel();
        jCalendarioDataDevuolucao = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();

        jLabel3.setText("Amigo");

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jFormattedTextField2.setText("jFormattedTextField2");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ToolShare");
        setResizable(false);

        jLabel2.setText("Data da Devolução");

        cb1.setMaximumRowCount(200);
        cb1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione um amigo" }));
        cb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb1ActionPerformed(evt);
            }
        });

        cb2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione uma ferramenta" }));
        cb2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb2ActionPerformed(evt);
            }
        });

        btnCancelar.setText("Voltar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        jCalendarioDataEmprestimo.setDateFormatString("yyyy-MM-dd");

        jLabel1.setText("Formato: yyyy-MM-dd");

        jCalendarioDataDevuolucao.setDateFormatString("yyyy-MM-dd");

        jLabel4.setText("Data do Empréstimo");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(cb1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(cb2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jCalendarioDataEmprestimo, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCalendarioDataDevuolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(91, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80)
                .addComponent(jLabel1)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCalendarioDataEmprestimo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jCalendarioDataDevuolucao, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(530, 426));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb1ActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_cb1ActionPerformed

    private void cb2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb2ActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        // TODO add your handling code here:
        String amigo = "";
        String ferramenta = "";
        Date dataDevolucao = null;
        Date dataEmprestimo = null;

        Amigo amigoAchado;
        Ferramenta ferramentaAchada;
        int idAmigo = 0;
        int idFerramenta = 0;
        
        
        // PEGANDO O VALOR DA BOX 1 (AMIGOS)
        int indexAmigo = this.cb1.getSelectedIndex();
        String valorAmigo = this.cb1.getItemAt(indexAmigo);
        // PEGANDO O VALOR DA BOX 2
        int indexFerramenta = this.cb2.getSelectedIndex();
        String valorFerramenta = this.cb2.getItemAt(indexFerramenta);
        
        
        try {
            if (cb1.getSelectedIndex() == 0) {
                throw new Mensagens("Selecione um amigo");
            }
            else{
                amigo = valorAmigo;
            }
            
            if (cb2.getSelectedIndex() == 0)
            {
                throw new Mensagens("Selecione uma ferramenta");
            }
            else{
                ferramenta = valorFerramenta;
            }        
    
            // Pega a data do calendario
            dataDevolucao = this.jCalendarioDataDevuolucao.getDate();
            dataEmprestimo = this.jCalendarioDataEmprestimo.getDate();
             
            
            // testa se o valor da data é nulo
            if (dataDevolucao == null || dataEmprestimo == null) {
                throw new Mensagens("Insira uma Data valida!");
            } else if (dataDevolucao.compareTo(dataEmprestimo) < 0) {
                throw new Mensagens("Data de devolução não pode ser antes da data do empréstimo! ");
            }
            

            // ACHAR O ID DO AMIGO
            ArrayList<Amigo> listaAmigos = new ArrayList<>();
            listaAmigos = this.objetoamigo.getMinhaLista();
            
            for (Amigo a : listaAmigos) {
                if (a.getNome().equals(amigo)) {
                    idAmigo = a.getId();                   
                }
            }
            amigoAchado = this.objetoamigo.carregaAmigo(idAmigo);
            
            // ACHAR O ID DA FERRAMENTA
            ArrayList<Ferramenta> listaFerramenta = new ArrayList<>();
            listaFerramenta = this.objetoferramenta.getMinhaLista();
                      
            for (Ferramenta f : listaFerramenta) {
                if (f.getNome().equals(ferramenta) && f.getDisponibilidade() == true) {
                    idFerramenta = f.getId();
                }
            }
            ferramentaAchada = this.objetoferramenta.carregaFerramenta(idFerramenta);
            
            // INSERIR EMPRESTIMO NO BANCO DE DADOS
            if (this.objetoemprestimo.InsertEmprestimoBD(amigoAchado, ferramentaAchada, dataEmprestimo, dataDevolucao)) {
                this.objetoamigo.fazerEmprestimo(amigoAchado.getId());
                JOptionPane.showMessageDialog(rootPane, "EMPRESTIMO REALIZADO COM SUCESSO!");
                this.objetoferramenta.setIndisponivel(ferramentaAchada.getId());
                this.cb2.removeItemAt(indexFerramenta);   
                this.cb2.setSelectedIndex(0);
            }


        }catch (Mensagens e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e.getMessage());       
        }
           
    }//GEN-LAST:event_btnConfirmarActionPerformed
    
    public void CarregarBoxAmigos() {
        
        objetoamigo = new Amigo();
        ArrayList<Amigo> listaAmigos = new ArrayList<>(); 
        // CARREGAR AMIGOS NO MENU BOX
        listaAmigos = this.objetoamigo.getMinhaLista();
        
        //ORDENAR EM ORDEM ALFABETICA PELO NOME DO AMIGO
        Collections.sort(listaAmigos, new Comparator<Amigo>() {
            public int compare(Amigo amigo1, Amigo amigo2) {
                    return amigo1.getNome().compareTo(amigo2.getNome());
                }
        });   
        
        // ADICIONAR AMIGO NO MENU BOX
        for (Amigo a : listaAmigos) {
            cb1.addItem(a.getNome());
        }           
    }  
    
    public void CarregarBoxFerramentas() {
        
        objetoferramenta = new Ferramenta();      
        ArrayList<Ferramenta> listaFerramentas = new ArrayList<>();
        
        //CARREGAR FERRAMENTAS NO MENU BOX
        listaFerramentas = this.objetoferramenta.getMinhaLista();
        
        //SORT EM ORDEM ALFABETICA PELO NOME DO AMIGO
        Collections.sort(listaFerramentas, new Comparator<Ferramenta>() {
            public int compare(Ferramenta ferramenta1, Ferramenta ferramenta2) {
                    return ferramenta1.getNome().compareTo(ferramenta2.getNome());
                }
        }); 
        
        // AADICIONAR FERRAMENTA NO MENU BOX
        for (Ferramenta f : listaFerramentas) {
            if (f.getDisponibilidade()) {
                
                //cb2.addItem(f.getNome() + "  ID: " + f.getId());
                cb2.addItem(f.getNome());
                
            }      
        }          
    }
  
    // METODO PARA CARREGAR A DATA DE HOJE NA DATA DO EMPRESTIMO
    public void CarregarDataEmprestimo() {
        try {
            SimpleDateFormat desiredFormat = new SimpleDateFormat("yyyy-MM-dd");
            
            String hojeString = localDatehoje.toString();
            hoje = desiredFormat.parse(hojeString);
            this.jCalendarioDataEmprestimo.setDate(hoje);
        } catch (ParseException ex) {
            Logger.getLogger(EmprestimoFerramenta.class.getName()).log(Level.SEVERE, null, ex);
        }
    
    }
    
  
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmprestimoFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmprestimoFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmprestimoFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmprestimoFerramenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmprestimoFerramenta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JComboBox<String> cb1;
    private javax.swing.JComboBox<String> cb2;
    private com.toedter.calendar.JDateChooser jCalendarioDataDevuolucao;
    private com.toedter.calendar.JDateChooser jCalendarioDataEmprestimo;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JFormattedTextField jFormattedTextField2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private java.awt.Panel panel1;
    // End of variables declaration//GEN-END:variables
}
